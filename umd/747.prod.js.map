{"version":3,"file":"747.prod.js","mappings":"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","sources":["webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/show-qrcode.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx"],"sourcesContent":["// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.forEach(m => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.forEach(m => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.forEach(m => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    const members = [];\n    const added = [];\n    const removed = [];\n\n    const keys = Object.keys(this.state.index);\n    keys.forEach(k => {\n      if (this.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (this.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (this.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","import QRCode from 'qrcodejs';\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { QRCODE_SIZE } from '../config';\n\nexport default class ShowQRCode extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.qrCodeRef = React.createRef();\n  }\n\n  componentDidMount() {\n    new QRCode(this.qrCodeRef.current, {\n      text: this.props.uri,\n      width: QRCODE_SIZE,\n      height: QRCODE_SIZE,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form-column\">\n        <br />\n        <div className=\"qr-code\" ref={this.qrCodeRef} />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.props.onCancel}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      _ => this.props.onDeleteTopic(this.props.topic), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.props.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      _ => this.props.onDeleteMessages(this.props.topic), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      _ => this.props.onLeaveTopic(this.props.topic), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      _ => this.props.onBlockTopic(this.props.topic), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (_ => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.props.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.props.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.props.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.props.access}\n                </tt>\n              </div>\n              {!this.props.channel ?\n                <div className=\"group\">\n                  <div>\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                      description=\"Label for default access mode\" />\n                    </label>\n                  </div>\n                  <div className=\"quoted\">\n                    <div>Auth: <tt className={this.props.owner ? 'clickable' : null}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        if (this.props.owner) {\n                          this.props.onLaunchPermissionsEditor('auth');\n                        }\n                      }}>{this.props.auth}</tt>\n                    </div>\n                    <div>Anon: <tt className={this.props.owner ? 'clickable' : null}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        if (this.props.owner) {\n                          this.props.onLaunchPermissionsEditor('anon');\n                        }\n                      }}>{this.props.anon}</tt>\n                    </div>\n                  </div>\n                </div>\n              :\n                null\n              }\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.props.access}\n                  </tt>\n                </div>\n                <div>{this.props.fullName ? this.props.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.props.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { AccessMode, Tinode } from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport ShowQRCode from '../widgets/show-qrcode.jsx';\nimport TopicCommonView from './topic-common-view.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH,\n  NO_ACCESS_MODE, TOAST_DURATION } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { theCard, clipStr } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  qrcode: {\n    id: 'scan_qr_code',\n    defaultMessage: 'Scan QR Code',\n    description: 'Title for scanning QR code'\n  },\n  text_copied: {\n    id: 'text_copied',\n    defaultMessage: 'Copied to clipboard',\n    description: 'Notification that text has been copied to clipboard'\n  },\n  self_topic_name: {\n    id: 'self_topic_name',\n    defaultMessage: 'Saved messages',\n    description: 'Name of self topic for UI',\n  },\n  self_topic_comment: {\n    id: 'self_topic_comment',\n    defaultMessage: 'Notes, messages, links, files saved for posterity',\n    description: 'Comment for self topic for UI',\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      isSelf: false,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.resetTags = this.resetTags.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowQRCode = this.handleShowQRCode.bind(this);\n    this.handleCopyToClipboard = this.handleCopyToClipboard.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n      this.resetTags(topic);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    const isSelf = topic.isSelfType();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: isSelf ?\n        props.intl.formatMessage(messages.self_topic_name) :\n        clipStr(topic.public && topic.public.fn, MAX_TITLE_LENGTH),\n      description: isSelf ?\n        props.intl.formatMessage(messages.self_topic_comment) :\n        clipStr(topic.public && topic.public.note, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: clipStr(topic.private && topic.private.comment, MAX_TITLE_LENGTH),\n      archived: topic.isArchived(),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      isSelf: isSelf,\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n  }\n\n  resetTags(topic) {\n    if (topic.getType() != 'grp') {\n      return;\n    }\n\n    const acs = topic.getAccessMode();\n    if (acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(mime, img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handleUnarchive(ignored, ignored2) {\n    this.props.onTopicUnArchive(this.props.topic);\n  }\n\n  handlePermissionsChanged(which, perm) {\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.handleBackNavigate();\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = AccessMode.encode(AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.error(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowQRCode(e) {\n    e.preventDefault();\n    this.props.onNavigate('qrcode');\n  }\n\n  handleCopyToClipboard(e, text) {\n    e.preventDefault();\n    navigator.clipboard.writeText(text).then(_ => {\n      this.setState({toast: this.props.intl.formatMessage(messages.text_copied)});\n      setTimeout(_ => { this.setState({toast: ''}); }, TOAST_DURATION);\n    });\n\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [{\n      title: formatMessage(messages.edit_permissions),\n      handler: _ => this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName)\n    }];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const alias = topic && topic.alias();\n\n    return (\n      <div id=\"info-view\">\n        <div className={`toast${this.state.toast ? ' show' : ''}`}>{this.state.toast}</div>\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommonView\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            reqCredMethod={this.props.reqCredMethod}\n            onCredAdd={this.props.onCredAdd}\n            onUpdateTagsRequest={this.props.onTopicTagsUpdateRequest}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdateRequest}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            topic={this.props.topic}\n            owner={this.state.owner}\n            admin={this.state.admin}\n            sharer={this.state.sharer}\n            deleter={this.state.deleter}\n            muted={this.state.muted}\n\n            groupTopic={this.state.groupTopic}\n            channel={this.state.channel}\n            access={this.state.access}\n            modeGiven={this.state.modeGiven}\n            modeWant={this.state.modeWant}\n            modeGiven2={this.state.modeGiven2}\n            modeWant2={this.state.modeWant2}\n            auth={this.state.auth}\n            anon={this.state.anon}\n\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n        view == 'qrcode' ?\n          <ShowQRCode\n            uri={Tinode.URI_TOPIC_ID_PREFIX + this.props.topic}\n            onCancel={this.handleBackNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              {!this.state.isSelf ?\n                <a href=\"#\" className=\"flat-button float-right\" onClick={e => {e.preventDefault(); this.props.onNavigate('general');}}>\n                  <i className=\"material-icons\">edit</i>&nbsp;\n                  <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n                </a>\n                : null\n              }\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              {!this.state.isSelf ?\n                <>\n                <div className=\"panel-form-row\">\n                  <div>\n                    <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                      description=\"Label for user address (ID)\" /></label>&nbsp;\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  <div style={{marginLeft: 'auto'}}>\n                    &nbsp;<a href=\"#\" onClick={e => {this.handleCopyToClipboard(e, this.state.address);}}>\n                      <i className=\"material-icons\">content_copy</i>\n                    </a>&nbsp;\n                    &nbsp;<a href=\"#\" onClick={this.handleShowQRCode}>\n                      <i className=\"material-icons\">qr_code</i>\n                    </a>&nbsp;\n                  </div>\n                </div>\n                {alias ?\n                  <div className=\"panel-form-row\">\n                    <div>\n                      <label className=\"small\"><FormattedMessage id=\"label_alias\" defaultMessage=\"Alias:\"\n                        description=\"Label for user or topic alias\" /></label>&nbsp;\n                      <tt>{alias}</tt>\n                    </div>\n                    <div style={{marginLeft: 'auto'}}>\n                      &nbsp;<a href=\"#\" onClick={e => {this.handleCopyToClipboard(e, alias);}}>\n                        <i className=\"material-icons\">content_copy</i>\n                      </a>&nbsp;\n                      &nbsp;<i className=\"material-icons\" style={{opacity: 0}}>qr_code</i>&nbsp;\n                    </div>\n                  </div>\n                : null}\n                </>\n                : null\n              }\n              {this.state.trustedBadges.length > 0 ?\n                <div className=\"group\">\n                  <BadgeList trustedBadges={this.state.trustedBadges} />\n                </div>\n                : null\n              }\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            {!this.state.isSelf ?\n              <><div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n              </div></>\n              : null\n            }\n            {this.state.archived ?\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_unarchive_topic\" defaultMessage=\"Archived:\"\n                    description=\"Label for unarchiving the topic\" />\n                </label>\n                <CheckBox name=\"archived\" checked={true} onChange={this.handleUnarchive} />\n              </div>\n              :\n              null\n            }\n            {!this.state.isSelf ?\n              <><div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                  <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                    defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n                </a>\n              </div></>\n              : null\n            }\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n"],"names":["messages","defineMessages","joiner","id","defaultMessage","reader","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","React","constructor","props","super","this","state","mode","replace","handleChange","bind","handleSubmit","handleCancel","val","indexOf","setState","split","sort","join","onSubmit","onCancel","render","formatMessage","intl","all","names","skip","compare","items","i","c","charAt","push","key","className","CheckBox","name","checked","onChange","userTitle","Contact","tinode","item","title","small","avatar","makeImageUrl","userAvatar","FormattedMessage","modeTitle","compareTitle","onClick","injectIntl","no_contacts","contacts_not_found_short","GroupManager","members","index","indexMembers","staticMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","forEach","m","user","delta","present","keepInitial","stat","sel","userId","status","slice","contacts","splice","msg","query","doContactFiltering","filter","values","length","added","removed","Object","keys","k","ChipInput","chips","prompt","filterFunc","onChipRemoved","ContactList","myUserId","topicSelected","emptyListMessage","showOnline","showUnread","onTopicSelected","ShowQRCode","qrCodeRef","componentDidMount","QRCode","current","text","uri","width","QRCODE_SIZE","height","ref","clear_messages","clear_messages_warning","delete_messages","delete_messages_warning","topic_delete","topic_delete_warning","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","e","preventDefault","onShowAlert","_","onDeleteTopic","topic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","href","groupTopic","onLaunchPermissionsEditor","access","auth","anon","fullName","modeGiven2","info","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","edit_permissions","qrcode","text_copied","self_topic_name","self_topic_comment","InfoView","admin","muted","address","undefined","isSelf","description","private","selectedContact","modeGiven","modeWant","modeWant2","contactList","trustedBadges","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","resetTags","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handleUnarchive","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowQRCode","handleCopyToClipboard","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","componentDidUpdate","getTopic","componentWillUnmount","newState","getType","user2","subscriber","acs","getGiven","getWant","NO_ACCESS_MODE","subscribers","sub","defacs","getDefaultAccess","getAccessMode","badges","trusted","entries","isSelfType","isOwner","isAdmin","isSharer","isDeleter","isMuted","clipStr","public","fn","MAX_TITLE_LENGTH","note","MAX_TOPIC_DESCRIPTION_LENGTH","photo","comment","archived","isArchived","isGroupType","isChannelType","chan","getMode","getMeta","startMetaQuery","withTags","build","desc","subs","mime","img","onTopicDescUpdate","theCard","Tinode","DEL_CHAR","ignored","onChangePermissions","ignored2","onTopicUnArchive","which","perm","onTopicDescUpdateRequest","userPermissionsEdited","uid","toEdit","toCompare","toSkip","titleEdit","titleCompare","AccessMode","encode","diff","console","error","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","navigator","clipboard","writeText","then","toast","setTimeout","TOAST_DURATION","onInitFind","onMemberUpdateRequest","args","panel","params","topicName","isMe","menuItems","handler","isJoiner","showContextMenu","x","y","view","shift","panelTitle","alias","MenuCancel","displayMobile","ErrorPanel","level","errorLevel","errorText","onClearError","onError","searchableContacts","TopicCommonView","reqCredMethod","onCredAdd","onUpdateTagsRequest","onTopicTagsUpdateRequest","onCredConfirm","onCredDelete","onUpdateTopicDesc","URI_TOPIC_ID_PREFIX","AvatarUpload","readOnly","src","alt","style","marginLeft","opacity","BadgeList","no_members","showMode","noScroll"],"sourceRoot":""}