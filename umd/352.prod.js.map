{"version":3,"file":"352.prod.js","mappings":"yLAQA,MAAMA,GAAWC,EAAAA,EAAAA,gBAAe,CAC9BC,eAAgB,CACdC,GAAI,iBACJC,eAAgB,CAAF,kCAGhBC,uBAAwB,CACtBF,GAAI,yBACJC,eAAgB,CAAF,wFAKlB,MAAME,UAAwBC,IAAAA,UAC5BC,WAAAA,CAAYC,GACVC,MAAMD,GAEN,MAAME,EAAKC,KAAKH,MAAMI,OAAOC,aAC7B,IAAIC,EAAe,EACnBJ,EAAGK,SAAUC,IACPA,EAAEC,MAAQD,EAAEC,IAAIC,YAClBJ,MAGJ,MAAMK,EAAST,EAAGU,mBAClBT,KAAKU,MAAQ,CACXC,KAAMH,EAASA,EAAOG,KAAO,KAC7BC,KAAMJ,EAASA,EAAOI,KAAO,KAC7BC,6BAAyBC,EACzBX,aAAcA,GAGhBH,KAAKe,qBAAuBf,KAAKe,qBAAqBC,KAAKhB,MAC3DA,KAAKiB,8BAAgCjB,KAAKiB,8BAA8BD,KAAKhB,MAC7EA,KAAKkB,4BAA8BlB,KAAKkB,4BAA4BF,KAAKhB,MACzEA,KAAKmB,yBAA2BnB,KAAKmB,yBAAyBH,KAAKhB,MACnEA,KAAKoB,oBAAsBpB,KAAKoB,oBAAoBJ,KAAKhB,MACzDA,KAAKqB,oBAAsBrB,KAAKqB,oBAAoBL,KAAKhB,KAC3D,CAEAe,oBAAAA,CAAqBO,GACnBtB,KAAKuB,SAAS,CAACC,SAAUF,IACzBtB,KAAKH,MAAM4B,iBAAiBH,EAC9B,CAEAL,6BAAAA,CAA8BS,GAC5B1B,KAAKuB,SAAS,CACZV,wBAAyBa,EACzBC,kBAAmB3B,KAAKU,MAAMgB,IAElC,CAEAR,2BAAAA,GACElB,KAAKuB,SAAS,CAACV,6BAAyBC,GAC1C,CAEAK,wBAAAA,CAAyBS,GACvB,IAAIpB,EAAS,CAAC,EACdA,EAAOR,KAAKU,MAAMG,yBAA2Be,EAC7C5B,KAAKH,MAAMgC,oBAAoB,UAAMf,OAAWA,EAAWN,GAE3D,IAAIsB,EAAW,CAACjB,6BAAyBC,GACzCgB,EAAS9B,KAAKU,MAAMG,yBAA2Be,EAC/C5B,KAAKuB,SAASO,EAChB,CAEAT,mBAAAA,CAAoBU,EAAMC,GACxBhC,KAAKH,MAAMoC,sBAAsBD,EACnC,CAEAZ,mBAAAA,CAAoBc,GAClBA,EAAEC,iBACF,MAAM,cAACC,GAAiBpC,KAAKH,MAAMwC,KACnCrC,KAAKH,MAAMyC,YACTF,EAAchD,EAASE,gBACvB8C,EAAchD,EAASK,wBACtB8C,GAAKvC,KAAKH,MAAM2C,kBACjB,MACA,EACA,KAEJ,CAEAC,MAAAA,GACE,OACE9C,IAAAA,cAAAA,IAAAA,SAAA,KAAGK,KAAKU,MAAMG,wBACZlB,IAAAA,cAAC+C,EAAAA,EAAiB,CAChBC,KAAM3C,KAAKU,MAAMiB,kBACjBiB,KAAK,IACLC,SAAU7C,KAAKmB,yBACf2B,SAAU9C,KAAKkB,8BAEjBvB,IAAAA,cAAA,OAAKoD,UAAU,oBACbpD,IAAAA,cAAA,OAAKoD,UAAU,qBACbpD,IAAAA,cAAA,SAAOoD,UAAU,SACfpD,IAAAA,cAACqD,EAAAA,iBAAgB,CAACzD,GAAE,iBAAkBC,eAAc,+BAGtDG,IAAAA,cAAA,WACEA,IAAAA,cAACqD,EAAAA,iBAAgB,CAACzD,GAAE,4BAA6BC,eAAc,8BAE5DyD,GAAuBtD,IAAAA,cAACuD,EAAAA,EAAW,CAClCC,YAAaF,EACbG,KAAK,WACLC,WAAYrD,KAAKe,0BAIzBpB,IAAAA,cAAA,OAAKoD,UAAU,OACfpD,IAAAA,cAAA,OAAKoD,UAAU,kBACbpD,IAAAA,cAAA,SAAO2D,QAAQ,kBACb3D,IAAAA,cAACqD,EAAAA,iBAAgB,CAACzD,GAAE,uBAAwBC,eAAc,sCAG5DG,IAAAA,cAAC4D,EAAAA,EAAQ,CAACC,KAAK,YAAYjE,GAAG,iBAC5ByC,QAAShC,KAAKH,MAAM4D,cAAeC,SAAU1D,KAAKqB,uBAEtD1B,IAAAA,cAAA,OAAKoD,UAAU,kBACbpD,IAAAA,cAAA,QAAMoD,UAAU,cACdpD,IAAAA,cAACqD,EAAAA,iBAAgB,CAACzD,GAAE,6BAA8BC,eAAc,sEAIpEG,IAAAA,cAAA,OAAKoD,UAAU,OACfpD,IAAAA,cAAA,OAAKoD,UAAU,qBACbpD,IAAAA,cAAA,KAAGgE,KAAK,IAAIZ,UAAU,qBAAqBa,QAAU1B,IAAOA,EAAEC,iBAAkBnC,KAAKH,MAAMgE,aACzFlE,IAAAA,cAAA,KAAGoD,UAAU,kBAAiB,eAAe,KAAOpD,IAAAA,cAACqD,EAAAA,iBAAgB,CAACzD,GAAE,gBACtEC,eAAc,6BAElBG,IAAAA,cAAA,KAAGgE,KAAK,IAAIZ,UAAU,qBAAqBa,QAAU1B,IAAOlC,KAAKoB,oBAAoBc,KACnFvC,IAAAA,cAAA,KAAGoD,UAAU,kBAAiB,UAAU,KAAOpD,IAAAA,cAACqD,EAAAA,iBAAgB,CAACzD,GAAE,wBACjEC,eAAc,sCAGpBG,IAAAA,cAAA,OAAKoD,UAAU,OACfpD,IAAAA,cAAA,OAAKoD,UAAU,qBACbpD,IAAAA,cAAA,WACEA,IAAAA,cAAA,SAAOoD,UAAU,SACfpD,IAAAA,cAACqD,EAAAA,iBAAgB,CAACzD,GAAE,4BAA6BC,eAAc,4CAInEG,IAAAA,cAAA,OAAKoD,UAAU,UACbpD,IAAAA,cAAA,WAAK,SAAMA,IAAAA,cAAA,MAAIoD,UAAU,YACvBa,QAAS5D,KAAKiB,8BAA8BD,KAAKhB,KAAM,SAAUA,KAAKU,MAAMC,OAC9EhB,IAAAA,cAAA,WAAK,SAAMA,IAAAA,cAAA,MAAIoD,UAAU,YACvBa,QAAS5D,KAAKiB,8BAA8BD,KAAKhB,KAAM,SAAUA,KAAKU,MAAME,SAGjFZ,KAAKU,MAAMP,aAAe,EACzBR,IAAAA,cAAAA,IAAAA,SAAA,KACEA,IAAAA,cAAA,OAAKoD,UAAU,OACfpD,IAAAA,cAAA,OAAKoD,UAAU,kBACbpD,IAAAA,cAAA,KAAGoD,UAAU,kBAAiB,SAAS,IACvCpD,IAAAA,cAAA,KAAGgE,KAAK,IAAIZ,UAAU,OAAOa,QAAU1B,IAAOA,EAAEC,iBAAkBnC,KAAKH,MAAMiE,kBAC3EnE,IAAAA,cAACqD,EAAAA,iBAAgB,CAACzD,GAAE,wBAAyBC,eAAc,gFACzDuE,OAAQ,CAAEC,MAAOhE,KAAKU,MAAMP,mBAIlC,MAIZ,EAGF,WAAe8D,EAAAA,EAAAA,YAAWvE,E,sFCpK1B,MAAMN,GAAWC,EAAAA,EAAAA,gBAAe,CAC9B6E,OAAQ,CACN3E,GAAI,kBACJC,eAAgB,CAAF,kEAGhB2E,OAAQ,CACN5E,GAAI,kBACJC,eAAgB,CAAF,kEAGhB4E,OAAQ,CACN7E,GAAI,mBACJC,eAAgB,CAAF,mEAGhB6E,OAAQ,CACN9E,GAAI,kBACJC,eAAgB,CAAF,0EAGhB8E,SAAU,CACR/E,GAAI,mBACJC,eAAgB,CAAF,qEAGhB+E,OAAQ,CACNhF,GAAI,mBACJC,eAAgB,CAAF,mEAGhBgF,QAAS,CACPjF,GAAI,oBACJC,eAAgB,CAAF,oEAGhBiF,MAAO,CACLlF,GAAI,mBACJC,eAAgB,CAAF,qEAKlB,MAAMkD,UAA0B/C,IAAAA,UAC9BC,WAAAA,CAAYC,GACVC,MAAMD,GAENG,KAAKU,MAAQ,CACXiC,MAAO9C,EAAM8C,MAAQ,IAAI+B,QAAQ,IAAK,KAGxC1E,KAAK2E,aAAe3E,KAAK2E,aAAa3D,KAAKhB,MAC3CA,KAAK4E,aAAe5E,KAAK4E,aAAa5D,KAAKhB,MAC3CA,KAAK6E,aAAe7E,KAAK6E,aAAa7D,KAAKhB,KAC7C,CAEA2E,YAAAA,CAAaG,GACX,IAAInC,EAAO3C,KAAKU,MAAMiC,MAEV,GADAA,EAAKoC,QAAQD,GAEvBnC,GAAQmC,EAERnC,EAAOA,EAAK+B,QAAQI,EAAK,IAE3B9E,KAAKuB,SAAS,CAACoB,KAAMA,GACvB,CAEAiC,YAAAA,GAEE,MAAMjC,GAAQ3C,KAAKU,MAAMiC,MAAQ,KAAKqC,MAAM,IAAIC,OAAOC,KAAK,IAExDvC,KADY3C,KAAKH,MAAM8C,MAAQ,KAAKqC,MAAM,IAAIC,OAAOC,KAAK,IAE5DlF,KAAKH,MAAMgD,SAASF,GAEpB3C,KAAKH,MAAMiD,UAEf,CAEA+B,YAAAA,GACE7E,KAAKH,MAAMiD,UACb,CAEAL,MAAAA,GACE,MAAM,cAACL,GAAiBpC,KAAKH,MAAMwC,KAC7B8C,EAAM,WACNC,EAAQ,CACZ,EAAKhD,EAAchD,EAAS8E,OAAQ,CAACY,IAAK,MAC1C,EAAK1C,EAAchD,EAAS+E,OAAQ,CAACW,IAAK,MAC1C,EAAK1C,EAAchD,EAASgF,OAAQ,CAACU,IAAK,MAC1C,EAAK1C,EAAchD,EAASiF,OAAQ,CAACS,IAAK,MAC1C,EAAK1C,EAAchD,EAASkF,SAAU,CAACQ,IAAK,MAC5C,EAAK1C,EAAchD,EAASmF,OAAQ,CAACO,IAAK,MAC1C,EAAK1C,EAAchD,EAASoF,QAAS,CAACM,IAAK,MAC3C,EAAK1C,EAAchD,EAASqF,MAAO,CAACK,IAAK,OAG3C,IAAIlC,EAAO5C,KAAKH,MAAM+C,MAAQ,GAC1BD,EAAO3C,KAAKU,MAAMiC,KAClB0C,GAAWrF,KAAKH,MAAMwF,SAAW,IAAIX,QAAQ,IAAK,IAClDY,EAAQ,GACZ,IAAK,IAAIC,EAAE,EAAGA,EAAEJ,EAAYI,IAAK,CAC/B,IAAIlF,EAAI8E,EAAIK,OAAOD,GACf3C,EAAKmC,QAAQ1E,IAAM,GAAKsC,EAAKoC,QAAQ1E,GAAK,GAI9CiF,EAAMG,KACJ9F,IAAAA,cAAA,MAAI+F,IAAKrF,GACPV,IAAAA,cAAA,UAAKyF,EAAM/E,IACXV,IAAAA,cAAA,MAAIoD,UAAU,YAAYH,EAAKmC,QAAQ1E,GAAK,EAC1CV,IAAAA,cAAC4D,EAAAA,EAAQ,CAACC,KAAMnD,EAAG2B,QAAUW,EAAKoC,QAAQ1E,IAAM,EAAIqD,SAAU1D,KAAK2E,eAEnEhF,IAAAA,cAAC4D,EAAAA,EAAQ,CAACC,KAAMnD,EAAG2B,QAAUW,EAAKoC,QAAQ1E,IAAM,KAC3CL,KAAKH,MAAMwF,QAAU1F,IAAAA,cAAA,MAAIoD,UAAU,YACxCpD,IAAAA,cAAC4D,EAAAA,EAAQ,CAACC,KAAMnD,EAAG2B,QAAUqD,EAAQN,QAAQ1E,IAAM,KAC7C,MAGd,CAEA,OACEV,IAAAA,cAAA,OAAKoD,UAAU,qBACZ/C,KAAKH,MAAM8F,UACVhG,IAAAA,cAAA,MAAIoD,UAAU,qBAAoBpD,IAAAA,cAACiG,EAAAA,EAAO,CACxC3F,OAAQD,KAAKH,MAAMI,OACnB4F,KAAM7F,KAAKH,MAAMgG,KACjBC,MAAO9F,KAAKH,MAAM8F,UAClBI,OAAO,EACPC,QAAQC,EAAAA,EAAAA,IAAajG,KAAKH,MAAMqG,WAAalG,KAAKH,MAAMqG,WAAa,SAAiB,KAC1FvG,IAAAA,cAAA,SAAOoD,UAAU,SAAQpD,IAAAA,cAACqD,EAAAA,iBAAgB,CAACzD,GAAE,oBAC3CC,eAAc,kCAChBG,IAAAA,cAAA,SAAOoD,UAAU,qBAChB/C,KAAKH,MAAMwF,QACV1F,IAAAA,cAAA,aAAOA,IAAAA,cAAA,UACLA,IAAAA,cAAA,WAASA,IAAAA,cAAA,UAAKK,KAAKH,MAAMsG,WACzBxG,IAAAA,cAAA,UAAKK,KAAKH,MAAMuG,gBAElB,KACFzG,IAAAA,cAAA,aACG2F,IAEH3F,IAAAA,cAAA,WACAA,IAAAA,cAAA,OAAKoD,UAAU,kBACbpD,IAAAA,cAAA,UAAQoD,UAAU,UAAUa,QAAS5D,KAAK6E,cACxClF,IAAAA,cAACqD,EAAAA,iBAAgB,CAACzD,GAAE,gBAAiBC,eAAc,6BAErDG,IAAAA,cAAA,UAAQoD,UAAU,UAAUa,QAAS5D,KAAK4E,cACxCjF,IAAAA,cAACqD,EAAAA,iBAAgB,CAACzD,GAAE,YAAaC,eAAc,0BAKzD,EAGF,KAAeyE,EAAAA,EAAAA,YAAWvB,E","sources":["webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx"],"sourcesContent":["// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleCheckboxClick(what, checked) {\n    this.props.onToggleIncognitoMode(checked);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (_ => this.props.onDeleteAccount()), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <span className=\"small gray\">\n              <FormattedMessage id=\"incognito_mode_description\" defaultMessage=\"Hide your online status and typing indicators.\"\n                description=\"Description for incognito mode toggle\" />\n            </span>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                  description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n"],"names":["messages","defineMessages","delete_account","id","defaultMessage","delete_account_warning","AccSecurityView","React","constructor","props","super","me","this","tinode","getMeTopic","blockedCount","contacts","c","acs","isJoiner","defacs","getDefaultAccess","state","auth","anon","showPermissionEditorFor","undefined","handlePasswordUpdate","bind","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handlePermissionsChanged","handleDeleteAccount","handleCheckboxClick","pwd","setState","password","onUpdatePassword","which","editedPermissions","perm","onUpdateAccountDesc","newState","what","checked","onToggleIncognitoMode","e","preventDefault","formatMessage","intl","onShowAlert","_","onDeleteAccount","render","PermissionsEditor","mode","skip","onSubmit","onCancel","className","FormattedMessage","password_unchanged","InPlaceEdit","placeholder","type","onFinished","htmlFor","CheckBox","name","incognitoMode","onChange","href","onClick","onLogout","onShowBlocked","values","count","injectIntl","joiner","reader","writer","preser","approver","sharer","deleter","owner","replace","handleChange","handleSubmit","handleCancel","val","indexOf","split","sort","join","all","names","compare","items","i","charAt","push","key","userTitle","Contact","item","title","small","avatar","makeImageUrl","userAvatar","modeTitle","compareTitle"],"sourceRoot":""}